{
  "openapi": "3.0.2",
  "info": {
    "title": "MockServer API",
    "description": "Simple and fast mock server implemented in python",
    "version": "1.2.0"
  },
  "paths": {
    "/_meta/health": {
      "get": {
        "tags": [
          "Meta"
        ],
        "summary": "Health Check",
        "description": "Status response for readiness and liveness probe",
        "operationId": "health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/mockserver": {
      "get": {
        "tags": [
          "MockServer"
        ],
        "summary": "Get All Mocks",
        "description": "Get all mocked routes",
        "operationId": "get_all_mocks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MockServer"
        ],
        "summary": "Add Mock",
        "description": "Create route mock\n\nIf route is already mocked it will add it to queue.",
        "operationId": "add_mock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MockServer"
        ],
        "summary": "Delete Mock",
        "description": "Delete mock specified in request",
        "operationId": "delete_mock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/mockserver/reset": {
      "delete": {
        "tags": [
          "MockServer"
        ],
        "summary": "Clear All Mocks",
        "description": "Delete all mocked routes",
        "operationId": "clear_all_mocks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePayload": {
        "title": "CreatePayload",
        "required": [
          "httpRequest",
          "httpResponse"
        ],
        "type": "object",
        "properties": {
          "httpRequest": {
            "$ref": "#/components/schemas/HttpRequest"
          },
          "httpResponse": {
            "$ref": "#/components/schemas/HttpResponse"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "HttpRequest": {
        "title": "HttpRequest",
        "required": [
          "path"
        ],
        "type": "object",
        "properties": {
          "method": {
            "title": "Method",
            "type": "string",
            "description": "Http method",
            "default": "GET",
            "example": "GET"
          },
          "path": {
            "title": "Path",
            "type": "string",
            "description": "Url path",
            "example": "/users"
          },
          "queryStringParameters": {
            "title": "queryStringParameters",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Query string parameters",
            "example": {
              "name": [
                "John"
              ],
              "age": [
                "25",
                "30"
              ]
            }
          }
        }
      },
      "HttpResponse": {
        "title": "HttpResponse",
        "type": "object",
        "properties": {
          "statusCode": {
            "title": "statusCode",
            "type": "integer",
            "description": "Status code of mocked response",
            "default": 200,
            "example": 200
          },
          "headers": {
            "title": "Headers",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Headers included in mock response",
            "example": {
              "x-user": "John Doe"
            }
          },
          "body": {
            "title": "Body",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "description": "Body that will be returned",
            "default": "",
            "example": "{\"users\":[\"John\",\"Dave\"]}"
          },
          "remainingTimes": {
            "title": "remainingTimes",
            "type": "integer",
            "description": "Number of times this mock will be returned until deleted. -1 means unlimited",
            "default": -1,
            "example": "-1"
          },
          "delay": {
            "title": "Delay",
            "type": "integer",
            "description": "How much milliseconds wait until response",
            "default": 0,
            "example": "500"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
